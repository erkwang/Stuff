
R version 3.0.1 (2013-05-16) -- "Good Sport"
Copyright (C) 2013 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> 
> ##
> #
> # Logistic regression
> # 
> # Y_{i} | \beta \sim \textrm{Bin}\left(n_{i},e^{x_{i}^{T}\beta}/(1+e^{x_{i}^{T}\beta})\right)
> # \beta \sim N\left(\beta_{0},\Sigma_{0}\right)
> #
> ##
> 
> library(mvtnorm) # For rmvnorm
> 
> "sim_logreg" <- function(m,p,beta.0,Sigma.0.inv)
+ {
+   n <- rpois(n=m,lambda=100)
+   X <- matrix(1,ncol=1,nrow=m)
+   if (p>=2){
+     for (i in 2:p){
+       X <- cbind(X,rnorm(m))      
+     }
+   }
+   beta <- matrix(rmvnorm(n=1,mean=beta.0,sigma=solve(Sigma.0.inv)),ncol=1)
+   eta <- X%*%beta
+   y <- rbinom(n=m,size=n,prob=exp(eta)/(1+exp(eta)))
+   return(list("y"=y,"X"=X,"n"=n,"beta"=beta))
+ }
> 
> ########################################################################################
> ########################################################################################
> ## Handle batch job arguments:
> 
> # 1-indexed version is used now.
> args <- commandArgs(TRUE)
> 
> cat(paste0("Command-line arguments:\n"))
Command-line arguments:
> print(args)
[1] "119"
> 
> ####
> # sim_start ==> Lowest simulation number to be analyzed by this particular batch job
> ###
> 
> #######################
> sim_start <- 1000
> length.datasets <- 200
> #######################
> 
> if (length(args)==0){
+   sinkit <- FALSE
+   sim_num <- sim_start + 1
+   set.seed(1330931)
+ } else {
+   # Sink output to file?
+   sinkit <- TRUE
+   # Decide on the job number, usually start at 1000:
+   sim_num <- sim_start + as.numeric(args[1])
+   # Set a different random seed for every job number!!!
+   set.seed(762*sim_num + 1330931)
+ }
> 
> # Simulation datasets numbered 1001-1200
> 
> ########################################################################################
> ########################################################################################
> 
> 
> #################################################
> m <- 100
> p <- 2
> beta.0 <- matrix(c(0,0))
> Sigma.0.inv <- diag(rep(1.0,p))
> #################################################
> 
> outdir <- "data/"
> outfile_data <- paste0(outdir,"blr_data_",sim_num,".csv")
> outfile_pars <- paste0(outdir,"blr_pars_",sim_num,".csv")
> 
> dat <- sim_logreg(m=m,p=2,beta.0=beta.0,Sigma.0.inv=Sigma.0.inv)
> y <- dat$y
> n <- dat$n
> X <- dat$X
> colnames(X) <- paste0("X",1:p)
> beta <- dat$beta
> names(beta) <- paste0("beta",1:p)
> 
> write.table(data.frame("y"=y,"n"=n,X),file=outfile_data,sep=",",quote=FALSE,row.names=FALSE,col.names=TRUE)
> write.table(data.frame(beta),file=outfile_pars,sep=",",quote=FALSE,row.names=FALSE,col.names=TRUE)
> 
> 
> 
> 
> 
